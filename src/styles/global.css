@tailwind base;
@tailwind components;
@tailwind utilities;

/*
  1. Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html, body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  @apply bg-primary text-primary antialiased leading-6;
  font-family: 'Roboto', sans-serif;
}
/*
  6. Improve media defaults
*/
img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input, button, textarea, select {
  font: inherit;
}
/*
  8. Avoid text overflows
*/
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#root, #__next {
  isolation: isolate;
}

@layer utilities {
  .bg-primary {
    @apply bg-white dark:bg-[#00050d];
  }

  .text-primary {
    @apply text-black fill-black  dark:text-gray-100 dark:fill-gray-100 dark:border-white;
  }

  .bg-card {
    @apply bg-white dark:bg-gray-800
  }

  .stroke-progress-empty {
    @apply  stroke-gray-400 dark:stroke-gray-500
  }

  .bg-progress-empty {
    @apply  bg-gray-400 dark:bg-gray-500
  }

  .section-title {
    @apply text-4xl font-bold leading-5
  }

  .avatar-border {
    @apply border-gray-400  dark:border-gray-700
  }

  .glow-effect {
    --glow-line-thickness: 2px;
    --glow-line-length: 20px;
    --glow-blur-size: 5px;
    --animation-speed: 1500ms;
    /* do not change, used for calculations */
    --container-offset: 100px;

    position: relative;
  }

  .glow-container {
    position: absolute;
    max-width: none;
    pointer-events: none;
    inset: calc(var(--container-offset) / -2);
    width: calc(100% + var(--container-offset));
    height: calc(100% + var(--container-offset));
    opacity: 0;
  }

  .glow-blur,
  .glow-line {
    fill: transparent;
    width: calc(100% - var(--container-offset));
    height: calc(100% - var(--container-offset));
    x: calc(var(--container-offset) / 2);
    y: calc(var(--container-offset) / 2);
    stroke-dasharray: var(--glow-line-length) calc(50px - var(--glow-line-length));
    @apply dark:stroke-white stroke-slate-500
  }

  .glow-blur {
    filter: blur(var(--glow-blur-size));
    stroke-width: var(--glow-blur-size);
    @apply dark:stroke-white stroke-slate-500
  }

  .glow-line {
    stroke-width: var(--glow-line-thickness);
    @apply dark:stroke-white stroke-slate-500
  }

  .glow-effect:is(:hover, :focus) :is(.glow-line, .glow-blur) {
    animation: glow var(--animation-speed) linear infinite;
  }

  .glow-effect:is(:hover, :focus) .glow-container {
    opacity: 1;
  }

}

@keyframes glow {
  from { stroke-dashoffset: initial }
  to { stroke-dashoffset: -100px }
}
